<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.example.demo.entity.User">
        <result column="u_id" jdbcType="VARCHAR" property="u_id" />
        <result column="u_name" jdbcType="VARCHAR" property="u_name" />
        <result column="u_password" jdbcType="VARCHAR" property="u_password" />
        <result column="u_phone" jdbcType="VARCHAR" property="u_phone" />
        <result column="u_wx" jdbcType="VARCHAR" property="u_wx" />
        <result column="u_email" jdbcType="VARCHAR" property="u_email" />
        <result column="r_id" jdbcType="INTEGER" property="r_id" />
    </resultMap>
    <!--查询用户信息-->
    <select id="getUserInfo" resultType="com.example.demo.entity.User">
        select * from user where u_id = #{u_id}
    </select>
    <!--删除用户信息-->
    <delete id="deleteById" parameterType="com.example.demo.entity.User">
        delete from user where u_id=#{u_id}
    </delete>
    <!--返回所有用户信息-->
    <select id="selectAll"  resultType="com.example.demo.entity.User">
        select * from user
    </select>

    <!--增加用户信息-->
    <insert id="save" parameterType="com.example.demo.entity.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="u_id != null" >
                u_id,
            </if>
            <if test="u_name != null" >
                u_name,
            </if>
            <if test="u_password != null" >
                u_password,
            </if>

            <if test="u_phone != null" >
                u_phone,
            </if>
            <if test="u_wx != null" >
                u_wx,
            </if>
            <if test="u_email != null" >
                u_email,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="u_id != null" >
                #{u_id,jdbcType=VARCHAR},
            </if>
            <if test="u_name != null" >
                #{u_name,jdbcType=VARCHAR},
            </if>
            <if test="u_password != null" >
                #{u_password,jdbcType=VARCHAR},
            </if>
            <if test="u_phone != null" >
                #{u_phone,jdbcType=VARCHAR},
            </if>
            <if test="u_wx != null" >
                #{u_wx,jdbcType=VARCHAR},
            </if>
            <if test="u_email != null" >
                #{u_email,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--根据id更改用户信息-->
    <update id="update" parameterType="com.example.demo.entity.User">
        update user
        <set >
            <if test="u_name != null" >
                u_name = #{u_name,jdbcType=VARCHAR},
            </if>
            <if test="u_password != null" >
                u_password = #{u_password,jdbcType=VARCHAR},
            </if>
            <if test="u_phone != null" >
                u_phone = #{u_phone,jdbcType=VARCHAR},
            </if>
            <if test="u_email != null" >
                u_email = #{u_email,jdbcType=VARCHAR},
            </if>
        </set>
        where u_id = #{u_id,jdbcType=VARCHAR}
    </update>


    <!--根据id更改ur信息-->
    <update id="updateur" parameterType="com.example.demo.entity.User">
        update user_role
        <set >
            <if test="r_id != null" >
                r_id = #{r_id,jdbcType=INTEGER},
            </if>
        </set>
        where u_id = #{u_id,jdbcType=VARCHAR}
    </update>


    <select id="select_u_r" resultType="com.example.demo.entity.User">
             select user.u_id,user.u_name,user.u_password,user.u_phone,role.r_name from user,user_role,role where user.u_id = user_role.u_id and role.r_id=user_role.r_id
    </select>


    <select id="getUserRole" resultType="com.example.demo.entity.User">
             select user.u_id,user.u_name,user.u_password,user.u_phone,role.r_name from user,user_role,role where user.u_id = user_role.u_id and role.r_id=user_role.r_id and user.u_id=#{id}
    </select>




</mapper>